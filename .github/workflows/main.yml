name: CI

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    name: (build stencil ${{ matrix.stencil_version }})
    strategy:
      fail-fast: false
      matrix:
        # Run with multiple different versions of Stencil in parallel:
        # 1. DEFAULT - uses the version of Stencil written in `package-lock.json`, keeping the same version used by the
        # Stencil team as a source of truth
        # 2. 2 - will install the latest release under major version 2 of Stencil. This should be kept as long as this
        # library supports Stencil v2.Y.Z
        # 3. 3 - will install the latest release under major version 3 of Stencil. This should be kept as long as this
        # library supports Stencil v3.Y.Z
        # 4. 4 - will install the latest release under major version 4 of Stencil. This should be kept as long as this
        # library supports Stencil v4.Y.Z
        stencil_version: ['DEFAULT', '2', '3', '4']

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Get Core Dependencies
        uses: stenciljs/.github/actions/get-core-dependencies@main

      - name: Test
        run: npm run test

      - name: Install Stencil ${{matrix.stencil_version}}
        run: npm install --save-dev @stencil/core@${{matrix.stencil_version}}
        shell: bash
        if: ${{ matrix.stencil_version != 'DEFAULT' }}
      - name: Report Stencil Version
        run: npm ls @stencil/core
        shell: bash

      - name: Build
        run: npm run build
        shell: bash

      - name: Create Symlink
        run: npm link
        shell: bash

      - name: Enter test-app Directory
        run: cd test-app
        shell: bash

      - name: Install test-app Dependencies
        run: npm install
        shell: bash

      - name: Link Stencil Store
        run: npm link @stencil/store
      - name: Build test-app
        run: npm run build
        shell: bash

      - name: Test test-app
        run: npm test
        shell: bash
